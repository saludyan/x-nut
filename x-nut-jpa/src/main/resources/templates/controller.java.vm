package ${package.Controller};


import nut.jpa.criteria.XPage;
import nut.thas.defind.rest.RestResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import ${package.Criteria}.${entity}Criteria;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
## @RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName} {
    #set($serviceName=${table.serviceName.substring(0,1).toLowerCase()}+${table.serviceName.substring(1)})
    #set($entityName=${entity.substring(0,1).toUpperCase()}+${entity.substring(1)})
    @Autowired
    private ${table.serviceName} ${serviceName};

    /**
    * 条件搜索(分页)
    */
    @GetMapping("/page/${controllerMappingHyphen}")
    public RestResponse<XPage<${entity}>> findPage(@ModelAttribute ${entity}Criteria criteria){
        if(criteria.getStatus() == null){
            criteria.setStatus(1);
        }
        return RestResponse.success(${serviceName}.findPage(criteria));
    }

    /**
    * 条件搜索(单个)
    */
    @GetMapping("/single/${controllerMappingHyphen}")
    public RestResponse<${entity}> getSingle(@ModelAttribute ${entity}Criteria criteria){
        if(criteria.getStatus() == null){
            criteria.setStatus(1);
        }
        return RestResponse.success(${serviceName}.get(criteria));
    }

    /**
    * 条件搜索
    */
    @GetMapping("/${controllerMappingHyphen}")
    public RestResponse<List<${entity}>> find(@ModelAttribute ${entity}Criteria criteria){
        if(criteria.getStatus() == null){
            criteria.setStatus(1);
        }
        return RestResponse.success(${serviceName}.find(criteria));
    }

    /**
    * 根据ID获取
    */
    @GetMapping("/${controllerMappingHyphen}/{id}")
    public RestResponse<${entity}> getById(@PathVariable Long id){
        return RestResponse.success(${serviceName}.get(id));
    }

    /**
    * 新增
    */
    @PostMapping("/${controllerMappingHyphen}")
    public RestResponse<${entity}> create(@RequestBody ${entity} ${entityName} ){
        return RestResponse.success(${serviceName}.save(${entityName}));
    }


    /**
    * 更新
    */
    @PutMapping("/${controllerMappingHyphen}")
    public RestResponse<${entity}> update(@RequestBody ${entity} ${entityName} ){
        return RestResponse.success(${serviceName}.save(${entityName}));
    }

    /**
    * 删除
    */
    @DeleteMapping("/${controllerMappingHyphen}/{id}")
    public RestResponse delete(@PathVariable Long id ){
        // 物理删除
        //${serviceName}.delete(id);
        // 逻辑删除
        ${serviceName}.trash(id);
        return RestResponse.success("删除成功");
    }

}
